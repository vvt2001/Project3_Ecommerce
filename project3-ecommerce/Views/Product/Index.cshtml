@model project3_ecommerce.Models.SearchViewModel
@using PagedList.Mvc;
@using PagedList;
@{
    ViewData["Title"] = "Các sản phẩm";
}
<style>
    .card-header {
        font-weight: bold;
        background-color: whitesmoke;
        padding: 0.5em 0.5em 0.5em 0.5em;
        margin: 0 0 0 0;
        border: solid 1px;
        border-color: lightgray;
        border-top-left-radius: 4px;
        border-top-right-radius: 4px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        cursor: pointer
    }

    .card-body {
        border: solid 1px;
        border-color: lightgray;
        overflow: hidden;
        cursor: pointer
    }

    .card-footer {
        background-color: whitesmoke;
        padding: 0.5em 0.5em 0.5em 1em;
        border: solid 1px;
        border-color: lightgray;
        vertical-align: middle;
        height: 70px;
        border-bottom-left-radius: 4px;
        border-bottom-right-radius: 4px;
        margin-bottom: 20px
    }

    .text-muted {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .form-control {
        margin: 0px 10px 10px 0px;
        width: 200px;
    }
</style>

@using (Html.BeginForm("Index", "Product", FormMethod.Post))
{
    <div id="search-bar" style=" margin: auto ">
        <h3>Bộ lọc tìm kiếm</h3>
        <div class="container">
            <div class="row">
                @Html.EditorFor(model => model.SearchModel.Name, new { htmlAttributes = new { Class = "form-control col-md-3", @placeholder = "Tên sản phẩm", style = "width: 260px" } })

                @Html.DropDownListFor(model => model.SearchModel.Category, ViewBag.Category_EnumList as SelectList, "-Danh mục sản phẩm-", new { Class = "form-control col-md-3" })
            </div>
            <div class="row">
                @Html.EditorFor(model => model.SearchModel.LowerPrice, new { htmlAttributes = new { Class = "form-control col-md-3", @placeholder = "Từ", onkeypress = "return isNumber(event)" } })


                @Html.EditorFor(model => model.SearchModel.UpperPrice, new { htmlAttributes = new { Class = "form-control col-md-3", @placeholder = "Đến", onkeypress = "return isNumber(event)" } })

                <input type="submit" value="Tìm" class="btn btn-secondary col-md-2" style="margin:auto; display:block; width:50px" />
            </div>
        </div>
    </div>
}
<hr />
<h3> Danh sách sản phẩm </h3>
<div class="container" style="margin:10px 0 10px 0">
    @if (Model.ProductModel != null)
    {
        foreach (var product in Model.ProductModel)
        {
            <div class="card col-md-3" style="width: 280px;" >
                <h3 class="card-header" onclick="redirect(@product.ID)">@product.Name</h3>
                <div class="card-body" style="height:250px" onclick="redirect(@product.ID)">
                    @if (product.ImagePath != null)
                    {
                        <img alt="" src="@product.ImagePath" style=" width: 100%; height: 100%;" />
                    }
                </div>
                <div class="card-footer">
                    <div class="text-muted">@(product.Price.ToString("n0")) VND</div>
                    <input type="button" value="Đặt hàng" class="btn btn-sm" style="float:right;background-color:black;color:white;margin:3px 3px 3px 3px" onclick="AddToCart(@product.ID)">
                </div>
            </div>
        }
    }




</div>
<div>
    @if (Model.ProductModel != null)
    {

        @Html.PagedListPager(Model.ProductModel, page => Url.Action("Index", "Product", new { page }),
                 new PagedListRenderOptions
                 {
                     MaximumPageNumbersToDisplay = 5,
                 })
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    function AddToCart(ID) {
        $.ajax({
            url: '@Url.Action("AddToCart")',
            type: 'POST',
            data: jQuery.param({ ID: ID, quantity: 1 }),
            success: function () {
                toastr.success("Đã thêm sản phẩm vào giỏ hàng, xin kiểm tra.","Thông báo");
            },
            error: function () {
                toastr.error("Có lỗi trong việc thêm sản phẩm vào giỏ hàng.","Lỗi!");
            },
        });
        return false;
    }

    function redirect(ID) {
        var url = '@Url.Action("Details", "Product", new { id = "__id__" })';
        window.location.href = url.replace('__id__', ID);
    }
</script>
}
